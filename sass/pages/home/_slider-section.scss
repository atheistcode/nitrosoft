@use "sass:math";

.slider-section {
  grid-column: full-start / full-end;
  /* Temporary fix because grid-template-rows: minmax() in _base.scss is not working. */
  max-height: 62rem;
  height: 48vw;
  position: relative;
}

.carousel-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  opacity: 0;
  transform: translateY(50%);
  width: 7rem;
  height: 6rem;
  cursor: pointer;
  background-color: $color-white;
  transition: $transition--1, background-color 0s;

  &--left {
    @extend .carousel-btn;
    bottom: 50%;
    left: 0;
    border-radius: 0 3rem 3rem 0;
  }

  &--right {
    @extend .carousel-btn;
    bottom: 50%;
    right: 0;
    border-radius: 3rem 0 0 3rem;
  }

  .slider-section:hover & {
    opacity: 1;
  }

  &:hover {
    background-color: $color-black;
  }
}

.carousel-icon {
  width: 1.8rem;
  height: 1.8rem;
  fill: $color-link;

  &--left {
    @extend .carousel-icon;
  }

  &--right {
    @extend .carousel-icon;
  }

  .carousel-btn:hover & {
    fill: $color-white;
  }
}

.slide {
  display: grid;
  @include grid-columns;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: $color-primary--light-1;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: multiply;

  &--1 {
    background-image: url("/assets/images/background-images/slider-images/slider-1.jpg");
    @extend .slide;
  }

  &--2 {
    @extend .slide;
    display: none;
    background-image: url("/assets/images/background-images/slider-images/slider-2.jpg");
  }

  &--3 {
    @extend .slide;
    display: none;
    background-image: url("/assets/images/background-images/slider-images/slider-3.jpg");
  }

  &__content {
    grid-column: center-start / center-end;
    color: $color-white;

    & > .slider-para--lg:last-of-type::after {
      content: "";
      display: block;
      margin-top: 1rem;
      margin-left: 0.5rem;
      width: 17%;
      height: 0.5rem;
      background-color: currentColor;
    }

    & > [class*="btn"] {
      margin-top: 5%;
    }
  }
}

.slider-para {
  width: max-content;
  line-height: 1;

  &--sm {
    @extend .slider-para;
    /* Another method to specify responsive font-size with javascript. */
    // "Currently when we want to access a Sass variable within JavaScript, we add it to a CSS variable and retrieve using getPropertyValue('--var'). Now that we're SSR'ing, we are only able to access these variables on the browser side. Due to this limitation, this feature adds the ability to import sass variables directly in our JavaScript files that works on server side."
    // https://github.com/Jam3/nextjs-boilerplate/pull/49
    font-weight: 400;
    font-size: clamp(1rem, 5.8rem, 4.5vw);
  }

  &--lg {
    @extend .slider-para;
    /* Another method to specify responsive font-size with javascript. */
    // "Currently when we want to access a Sass variable within JavaScript, we add it to a CSS variable and retrieve using getPropertyValue('--var'). Now that we're SSR'ing, we are only able to access these variables on the browser side. Due to this limitation, this feature adds the ability to import sass variables directly in our JavaScript files that works on server side."
    // https://github.com/Jam3/nextjs-boilerplate/pull/49
    font-size: clamp(1rem, 10.2rem, 8vw);
    font-weight: 600;
  }
}
