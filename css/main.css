@charset "UTF-8";
/* We use this hover effect when hovering over another or a parent element. */
/* We use this hover effect when hovering over another or a parent element. */
/* We use this hover effect when hovering over another or a parent element. */
/* Main grid-template-columns definition that consists of 14 columns. */
/* We use this hover effect when hovering over another or a parent element. */
/* COLORS */
/* TEXT COLORS */
/* FONTS */
/* BORDERS */
/* SHADOWS */
/* TRANSITIONS */
@keyframes shake-icon {
  0% {
    transform: scale3d(1, 1, 1);
  }
  10%, 20% {
    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
  }
  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }
  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}
@keyframes pin-on-map {
  0% {
    transform: scale(0);
  }
  30% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  70% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.35);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes slide-show-text {
  0% {
    transform: translateX(-50%);
    opacity: 0;
  }
  /* Takes 2% to enter. */
  1% {
    transform: translateX(5%);
    opacity: 0.5;
  }
  4%, 25% {
    transform: translateX(0);
    opacity: 1;
  }
  /* Takes 5% to exit. */
  /* It will have an effect as if the next slide pushes the previous one, because it arrives to position while the previous one is still there for 3%. */
  /* From 30% to 100% is the same in order to leave a time gap between each iteration. */
  30% {
    transform: translateX(50%);
    opacity: 0;
  }
  100% {
    transform: translateX(50%);
    opacity: 0;
  }
}
html {
  line-height: 1.4;
  /* To make calculations easier when using rem. */
  font-size: 62.5%;
}

ul {
  list-style: none;
}

a:focus-visible,
button:focus-visible,
input:focus-visible,
textarea:focus-visible,
select:focus-visible {
  outline: 0.1rem dotted #667c99;
}

*::selection {
  background-color: #ff311f;
  color: white;
}

/* Grid definition for the global page layout. */
.main {
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

img {
  display: block;
  max-width: 100%;
}

a {
  display: inline-block;
  color: inherit;
  text-decoration: none;
}

input,
button,
textarea,
select {
  /* Resetting with outline-width: 0 prevents the browser from clearing the styles and when you reapply a width the style will still be there. */
  outline-width: 0;
  font: inherit;
}

input,
button,
textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* Stop IE showing a scrollbar when there is no need for one. */
textarea {
  overflow: auto;
}

button {
  cursor: pointer;
  line-height: 1;
}

/* Remove all animations and transitions for people that prefer not to see them. */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* rubik-regular - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../assets/fonts/rubik-v12-latin-regular.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-regular.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-500 - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 500;
  src: local(""), url("../assets/fonts/rubik-v12-latin-500.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-500.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-600 - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 600;
  src: local(""), url("../assets/fonts/rubik-v12-latin-600.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-600.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-700 - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../assets/fonts/rubik-v12-latin-700.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-700.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-800 - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 800;
  src: local(""), url("../assets/fonts/rubik-v12-latin-800.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-800.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-italic - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: italic;
  font-weight: 400;
  src: local(""), url("../assets/fonts/rubik-v12-latin-italic.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-italic.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-500italic - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: italic;
  font-weight: 500;
  src: local(""), url("../assets/fonts/rubik-v12-latin-500italic.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-500italic.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-600italic - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: italic;
  font-weight: 600;
  src: local(""), url("../assets/fonts/rubik-v12-latin-600italic.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-600italic.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-700italic - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: italic;
  font-weight: 700;
  src: local(""), url("../assets/fonts/rubik-v12-latin-700italic.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-700italic.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* rubik-800italic - latin */
/* prettier-ignore */
@font-face {
  font-family: "Rubik";
  font-style: italic;
  font-weight: 800;
  src: local(""), url("../assets/fonts/rubik-v12-latin-800italic.woff2") format("woff2"), url("../assets/fonts/rubik-v12-latin-800italic.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
body {
  font-family: Rubik, sans-serif;
  font-size: 1.6rem;
  color: #667c99;
}

.para {
  line-height: 1.6;
}

.heading-1 {
  margin: 1rem 0;
  font-size: 9.6rem;
  font-weight: 500;
}

.heading-2 {
  margin: 1rem 0;
  font-size: 3rem;
  font-weight: 500;
}

.heading-3 {
  margin: 1rem 0;
  font-size: 2rem;
  font-weight: 500;
}

.heading-5 {
  margin: 0.5rem 0;
  font-size: 1.6rem;
  font-weight: 500;
}

.heading-6 {
  text-transform: uppercase;
  letter-spacing: 0.4rem;
  font-size: 1.2rem;
  font-weight: 500;
}

.link {
  color: #032a5e;
  transition: all 0.2s ease-in-out;
}
.link:hover {
  color: #667c99;
}

.border-bottom-dotted {
  border-bottom: 0.1rem dotted #667c99;
}

.arrows-bef-aft-btn {
  /* Establish a containing block for pseudo elements to move them around. */
  position: relative;
  /* Hide the overflowing content and define enough padding values to show the after pseudo element and hide the before pseudo element on initial state. */
  overflow: hidden;
  /* Padding is needed to show pseudo element which is absolutely positioned. */
  padding: 1rem 6rem 1rem 1rem;
  color: white;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  font-size: 2rem;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
}
.arrows-bef-aft-btn::before {
  content: "→";
  position: absolute;
  transform: translate(-145%, -35%);
  color: currentColor;
  font-size: 3.7rem;
}
.arrows-bef-aft-btn::after {
  content: "→";
  position: absolute;
  transform: translate(45%, -35%);
  color: currentColor;
  font-size: 3.7rem;
}
.arrows-bef-aft-btn:hover {
  padding-left: 6rem;
  padding-right: 0;
}

.filled-arrow-after-btn {
  color: #1fc2ef;
  white-space: nowrap;
  font-weight: 500;
  position: relative;
  /* To show text above pseudo element background. */
  z-index: 1;
  padding: 0.8rem;
}
.filled-arrow-after-btn::after {
  content: "➜";
  margin-left: 0.5rem;
  color: currentColor;
}
.filled-arrow-after-btn::before {
  content: "";
  position: absolute;
  /* The 4 dimensions peoperties have 0 value, to take full width and height. */
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* To show pseudo element background below text. */
  z-index: -1;
  /* Start the transform from center bottom. */
  transform-origin: 50% 100%;
  transform: scaleY(0);
  background-color: #fc5445;
  transition: all 0.3s cubic-bezier(0.52, 1.64, 0.37, 0.66);
}
.filled-arrow-after-btn:hover {
  color: white;
}
.filled-arrow-after-btn:hover::before {
  transform: scaleY(1);
}

.logo {
  display: flex;
  align-items: center;
}
.logo__icon {
  margin-right: 0.2rem;
  width: 3.8rem;
  height: 5.4rem;
}
.logo__title {
  font-size: 2.6rem;
  font-weight: 500;
}
.logo__title :nth-child(1) {
  color: #032a5e;
}
.logo__title :nth-child(2) {
  color: #667c99;
}

.menu-btn {
  display: flex;
  margin-top: 0.4rem;
}
.menu-btn::before, .menu-btn::after {
  content: "";
  width: 0.8rem;
  height: 0;
  border-top: 0.1rem solid #e6e6e6;
  border-color: #667c99;
  transition: all 0.3s ease-in-out;
}
.menu-btn::before {
  transform-origin: right;
  transform: rotate(45deg);
}
.menu-btn::after {
  transform-origin: left;
  transform: rotate(-45deg);
}

.header__content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  /* The z-index value for page content is in range 1-99 and for modals is in range 100-199. */
  margin: auto;
  max-width: 90%;
}
.header__navigation {
  /* Expand to occupy all available width and push elements on both sides. */
  flex: 1 1 0;
  padding: 0 5%;
}

.navigation__nav-info {
  padding: 1.5rem 0;
  text-align: center;
  font-size: 1.5rem;
}

.nav-list {
  display: flex;
  justify-content: space-around;
  align-items: center;
  border-top: 0.1rem solid #e6e6e6;
  /* Extend each item to occupy the full available width. */
}
.nav-list > * {
  flex-grow: 1;
}
.nav-list__item {
  /* Flex container to center "nav-list__link" and "nav-list__sublist" if it exists above each other. We used justify-content: center; so it will align the two elements in the center of their container and the width of this container will be the highest width of the two elements because "nav-list__sublist" is absolutely positioned so it is actually on top of "nav-list__link".  */
  display: flex;
  justify-content: center;
  position: relative;
  white-space: nowrap;
  font-weight: 500;
}
.nav-list__item:hover .menu-btn::before {
  transform: rotate(-45deg) translateX(75%) scaleX(1.5);
}
.nav-list__item:hover .menu-btn::after {
  transform: rotate(45deg) translateX(-75%) scaleX(1.5);
}
.nav-list__item:hover > .sub-list, .nav-list__item:hover > .sub-list--2 {
  z-index: 99;
  visibility: visible;
  opacity: 1;
  transform: translateY(-1rem);
}
.nav-list__link {
  color: #032a5e;
  transition: all 0.2s ease-in-out;
  /* Flex container to align the link text and the menu button. */
  display: flex;
  align-items: center;
  padding: 2rem 0;
}
.nav-list__link:hover {
  color: #667c99;
}
.nav-list__link > .menu-btn {
  margin-left: 0.5rem;
}

.sub-list, .sub-list--2 {
  position: absolute;
  top: 100%;
  /* Prevent sublists that we don't hover over from accidentally becoming visible. When a sublist is visible its z-index is 99, otherwise it is -1. */
  z-index: -1;
  visibility: hidden;
  opacity: 0;
  min-width: 25rem;
  border: 0.1rem solid #e6e6e6;
  border-radius: 0.5rem;
  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
  background-color: white;
  padding: 2rem 0;
  font-size: 1.5rem;
  font-weight: initial;
  transition: all 0.2s ease-in-out;
}
.sub-list__item {
  /* Only needed in "sub-list--2" because it has "sub-list__sub-title". Make the title of a sublist always have a hover effect when hovering over any child of this sublist. */
}
.sub-list__item:hover .sub-list__sub-title::before {
  transform: translateX(0.8rem);
  opacity: 1;
}
.sub-list__link {
  position: relative;
  width: max-content;
  color: currentColor;
  transition: all 0.2s ease-in-out;
  display: block;
  padding: 0.5rem 4rem;
}
.sub-list__link::before {
  content: "➜";
  position: absolute;
  top: 0.6rem;
  left: 1rem;
  opacity: 0;
  color: currentColor;
  font-size: 80%;
  transition: all 0.2s ease-in-out;
}
.sub-list__link:hover::before {
  transform: translateX(0.8rem);
  opacity: 1;
}
.sub-list__link:hover {
  color: #032a5e;
}
.sub-list__sub-title {
  /* Only needed in "sub-list--2" because it has "sub-list__sub-title". */
  margin-bottom: 0.5rem;
  font-weight: 500;
}
.sub-list::before, .sub-list--2::before {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: rotateZ(45deg) translateY(65%);
  width: 1.4rem;
  height: 1.4rem;
  border-top: 0.1rem solid #e6e6e6;
  border-left: 0.1rem solid #e6e6e6;
  background-color: white;
}

.sub-list--2 {
  display: flex;
  padding: 3rem 1rem;
}
.sub-list--2 .sub-list, .sub-list--2 .sub-list--2 {
  /* For sublist that has child sublists, those child sublists should be visible by default. */
  z-index: initial;
  visibility: visible;
  opacity: 1;
  /* Overwrite some styles that are applied in case of a sublist that has no child sublists. */
  position: relative;
  top: unset;
  border: none;
  border-radius: 0;
  box-shadow: none;
  padding: 0;
}
.sub-list--2 .sub-list::before, .sub-list--2 .sub-list--2::before {
  display: none;
}
.sub-list--2 > .sub-list__item:last-of-type {
  border-left: 0.1rem solid #e6e6e6;
}

.extras {
  display: flex;
  align-items: center;
  position: relative;
}
.extras__chat-icon {
  margin-right: 1.5rem;
  width: 4rem;
  height: 4rem;
}
.extras__text {
  border-right: 0.1rem solid #e6e6e6;
  padding-right: 2.5rem;
  font-size: 1.5rem;
}
.extras__search-icon {
  display: none;
  padding: 1.5rem 1.5rem 1.5rem 2rem;
}
.extras__search-form {
  margin-left: 4rem;
}

.search-form {
  display: flex;
  align-items: center;
  z-index: 99;
  transition: all 0.2s ease-in-out;
}
.search-form__label {
  display: none;
}
.search-form__input {
  /* Absolutely positioned to prevent other content from being pushed when its width increases. */
  position: absolute;
  right: 0;
  /* Make the search icon visible above the input. */
  z-index: -1;
  width: 6rem;
  overflow: hidden;
  border: 0.1rem solid #e6e6e6;
  border-radius: 0.5rem;
  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
  padding: 2rem;
  transition: all 0.2s ease-in-out;
}
.search-form__input:not(:focus)::placeholder {
  opacity: 0;
}
.search-form__input:focus {
  width: 32rem;
}
.search-form__input:focus::placeholder {
  opacity: 1;
  color: #667c99;
}
.search-form__btn {
  opacity: 0.5;
  margin-right: 1.5rem;
  border: none;
  background-color: transparent;
}

.search-icon {
  color: #032a5e;
  transition: all 0.2s ease-in-out;
  display: inline-block;
  width: 1.8rem;
  height: 2.4rem;
  cursor: pointer;
}
.search-icon:hover {
  color: #667c99;
}

.blog-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  padding: 8rem 0;
}
.blog-section__header {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  text-align: center;
}
.blog-section__header > .heading-2 {
  color: #032a5e;
}
.blog-section__articles {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for blog article cards. */
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 3rem;
  margin: 3rem auto 6rem auto;
}
.blog-section__footer {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  text-align: center;
}

.article-card {
  overflow: hidden;
  background-color: #f1f5f8;
  /* Placement of the large article card. */
  /* Placement of the small article cards. */
  /* The "article-card__link-container" class exists only in small article cards. */
}
.article-card:first-of-type {
  grid-column: 1/span 2;
  grid-row: 1/span 2;
}
.article-card:nth-of-type(2), .article-card:nth-of-type(3) {
  grid-row: 1;
}
.article-card:nth-of-type(4), .article-card:nth-of-type(5) {
  grid-row: 2;
}
.article-card__link-container {
  /* Expand the container to make its contents occupy the full height. */
  height: 100%;
  /* For small article cards ("article-card__link-container" class exists), we want the first child ("article-card__heading") to occupy the as much height as possible, pushing down all other elements ("article-card__date"). */
  /* Visually insert the date ("article-card__date") in the same order as in HTML. Otherwise it will be visually inserted first only if it is in a large card ("article-card__link-container" class doesn't exist). */
}
.article-card__link-container [class*=heading] {
  flex-grow: 1;
}
.article-card__link-container [class*=date] {
  order: 0;
}
.article-card__article {
  /* Expand the container to make its contents occupy the full height. */
  height: 100%;
  /* Make it a flex container to be able to visually insert elements in an order different from the HTML order. */
  display: flex;
  flex-direction: column;
}
.article-card__content {
  /* Expand all contents to occupy the full height. */
  flex: 1 1 0;
  display: flex;
  flex-direction: column;
  padding: 7% 10%;
}
.article-card__heading {
  margin-bottom: 2rem;
  color: #032a5e;
}
.article-card__para {
  margin-bottom: 2rem;
}
.article-card__date {
  /* Visually insert the date as the first element in large card. */
  order: -1;
  font-size: 1.5rem;
}
.article-card__btn {
  position: relative;
  /* Show text above pseudo element background. The element has z-index: 1 and the pseudo element has z-index: -1. */
  z-index: 1;
  border: 0.1rem solid #e6e6e6;
  border-radius: 0.5rem;
  background-color: white;
  padding: 1.5rem 2rem;
  color: #1fc2ef;
  white-space: nowrap;
  text-align: center;
  font-size: 1.6rem;
  font-weight: 500;
  /* Transition for properties (border, color, transform). */
  transition: all 0.2s ease-in-out;
}
.article-card__btn::before {
  content: "";
  position: absolute;
  /* The 4 dimensions peoperties have 0 value, to take full width and height. */
  top: 0;
  right: 0;
  /* Fix small area visible below the pseudo element. Visible when there is a border. */
  bottom: -0.1rem;
  left: 0;
  /* Show text above pseudo element background. The element itself has z-index: 1 and the pseudo element has z-index: -1. */
  z-index: -1;
  /* Start the transform from center bottom. */
  transform-origin: 50% 100%;
  transform: scaleY(0);
  background-color: #fc5445;
  /* Transition when hover off. */
  transition: all 0.3s ease-in-out;
}
.article-card__btn:hover {
  border-color: #fc5445;
  color: white;
}
.article-card__btn:hover::before {
  transform: scaleY(1);
  /* Transition when hover on. */
  transition: all 0.3s cubic-bezier(0.52, 1.64, 0.37, 0.66);
}
.article-card__img-container {
  /* Visually insert the image as the first element. */
  order: -1;
  overflow: hidden;
  background-color: #032a5e;
}
.article-card__img {
  filter: grayscale(100%);
  opacity: 0.8;
  transition: all 0.2s ease-in-out;
}
.article-card:hover .article-card__img {
  transform: scale(1.1);
  filter: grayscale(0);
}

.company-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  background-color: #231834;
  padding-top: 8rem;
}
.company-section__header {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for the header. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));
  column-gap: 2rem;
  margin-bottom: 4rem;
}
.company-section__header > .heading-6 {
  /* Placement in the header subgrid layout. */
  grid-column: 1;
  grid-row: 1;
  color: #1fc2ef;
}
.company-section__header > .heading-2 {
  /* Placement in the header subgrid layout. */
  grid-column: 1;
  grid-row: 2;
  color: white;
}
.company-section__header > .para {
  /* Placement in the header subgrid layout. */
  grid-column: 2;
  grid-row: 1/span 2;
}
.company-section__info-figures {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  grid-row: 2;
  /* Another subgrid definition for info figures. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(21rem, 1fr));
  gap: 3rem;
  position: relative;
  margin-bottom: -8rem;
}
.company-section__footer {
  /* Placement in the section subgrid layout. */
  grid-column: full-start/full-end;
  grid-row: 3;
  background-color: #f1f5f8;
  /* Higher padding value on top to leave empty space for the info figures with negative bottom margin. */
  margin-top: rem;
  padding-top: 14rem;
  padding-bottom: 6rem;
  text-align: center;
}

.info-figure {
  cursor: pointer;
}
.info-figure__img {
  object-fit: cover;
  object-position: center;
}
.info-figure__caption {
  position: relative;
  margin: -7rem auto 0 auto;
  width: 80%;
  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
  background-color: white;
  padding: 2rem;
  text-align: center;
  transition: all 0.2s ease-in-out;
  /* The three properties (display: block;  height: 0; overflow: hidden;) are required to hide an element and remove its space from the layout. */
  /* display: block; and overflow: hidden; are applied on all child elements. height: 0; is applied on the child element with an out-of-flow state. */
}
.info-figure__caption > * {
  display: block;
  overflow: hidden;
  transition: all 0.2s ease-in-out;
}
.info-figure__caption .heading-5 {
  height: 2.4rem;
  color: #1fc2ef;
  /* Fix text flickering on transition. */
  will-change: transform;
}
.info-figure__caption .heading-3 {
  margin: 0.4rem 0;
  color: #032a5e;
}
.info-figure__caption > :last-child {
  color: #1fc2ef;
  white-space: nowrap;
  font-weight: 500;
  height: 0;
}
.info-figure__caption > :last-child::after {
  content: "➜";
  margin-left: 0.5rem;
  color: currentColor;
}
.info-figure:hover .info-figure__caption {
  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
}
.info-figure:hover .info-figure__caption > .heading-5 {
  height: 0;
  transform: translateY(-100%);
}
.info-figure:hover .info-figure__caption > :last-child {
  height: 2.4rem;
}

.industries-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  background-color: #171122;
  padding: 8rem 0;
}
.industries-section__header {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for the header. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));
  column-gap: 2rem;
  margin-bottom: 4rem;
}
.industries-section__header > .heading-6 {
  /* Placement in the header subgrid layout. */
  grid-column: 1;
  grid-row: 1;
  color: #1fc2ef;
}
.industries-section__header > .heading-2 {
  /* Placement in the header subgrid layout. */
  grid-column: 1;
  grid-row: 2;
  color: white;
}
.industries-section__header > .para {
  /* Placement in the header subgrid layout. */
  grid-column: 2;
  grid-row: 1/span 2;
}
.industries-section__industry-cards {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  grid-row: 2;
  /* Another subgrid definition for industry cards. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(11.2rem, 1fr));
  gap: 3rem;
}

.industry-card {
  position: relative;
  border: 0.1rem solid #e6e6e6;
  border-color: rgba(3, 42, 94, 0.5);
  border-radius: 0.5rem;
  /* Pseudo element as a background color for the industry card. */
}
.industry-card__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 15%;
  text-align: center;
}
.industry-card .heading-5 {
  margin-bottom: 1.5rem;
  color: white;
}
.industry-card .para {
  font-size: 1.5rem;
}
.industry-card__icon {
  margin-bottom: 3rem;
  width: 6.4rem;
  height: 6.4rem;
  /* Visually insert the icon in the first order. */
  order: -1;
}
.industry-card::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: scale(1.2);
  transition: all 0.2s ease-in-out;
}
.industry-card:hover::before {
  transform: scale(1);
  border: transparent;
  background-color: rgba(3, 42, 94, 0.35);
}
.industry-card:hover .industry-card__icon {
  animation: 1s infinite shake-icon;
}

.services-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  padding: 8rem 0 4rem 0;
}
.services-section__header {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  margin-bottom: 4rem;
  text-align: center;
}
.services-section__header > .heading-2 {
  color: #032a5e;
}
.services-section__service-cards {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for service cards. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(21rem, 1fr));
  gap: 3rem;
  margin-bottom: 4rem;
}
.services-section__footer {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  margin-bottom: 6rem;
  text-align: center;
}
.services-section__customer-brands {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for customer brands. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(1.6rem, 1fr));
  column-gap: 3rem;
}

.service-card {
  background-color: #f1f5f8;
  padding: 10%;
  text-align: center;
}
.service-card > .heading-3 {
  color: #032a5e;
}
.service-card__service-icon {
  /* Align the svg icon and the span vertically in a flex container. */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 4rem auto;
}
.service-card__service-icon > svg {
  height: 8rem;
  transition: all 0.35s cubic-bezier(0.12, 0.845, 0.305, 1);
}
.service-card__service-icon > span {
  display: inline-block;
  margin-top: 0.8rem;
  width: 6.6rem;
  height: 0.8rem;
  border-radius: 100%;
  background-color: rgba(102, 124, 153, 0.2);
  transition: all 0.35s cubic-bezier(0.12, 0.845, 0.305, 1);
}
.service-card:hover .service-card__service-icon svg {
  transform: translateY(-2rem) rotate(8deg);
}
.service-card:hover .service-card__service-icon svg + span {
  transform: scale(0.75);
}

.brand__img {
  width: 100%;
  height: auto;
}

.slider-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  position: relative;
  height: 48vw;
  max-height: 62rem;
}
.slider-section__carousel-btn, .slider-section__carousel-btn--right, .slider-section__carousel-btn--left {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  bottom: 50%;
  opacity: 0;
  transform: translateY(50%);
  width: 7rem;
  height: 6rem;
  cursor: pointer;
  background-color: white;
  /* Different transition effects for each of properties background color and opacity. */
  transition: all 0.2s ease-in-out, background-color 0s;
}
.slider-section__carousel-btn--left {
  left: 0;
  border-radius: 0 3rem 3rem 0;
}
.slider-section__carousel-btn--right {
  right: 0;
  border-radius: 3rem 0 0 3rem;
}
.slider-section__carousel-btn:hover, .slider-section__carousel-btn--left:hover, .slider-section__carousel-btn--right:hover {
  background-color: black;
}
.slider-section__carousel-btn:hover .carousel-icon, .slider-section__carousel-btn:hover .carousel-icon--right, .slider-section__carousel-btn:hover .carousel-icon--left, .slider-section__carousel-btn--left:hover .carousel-icon, .slider-section__carousel-btn--left:hover .carousel-icon--right, .slider-section__carousel-btn--left:hover .carousel-icon--left, .slider-section__carousel-btn--right:hover .carousel-icon, .slider-section__carousel-btn--right:hover .carousel-icon--right, .slider-section__carousel-btn--right:hover .carousel-icon--left {
  fill: white;
}
.slider-section__slides-container {
  height: 100%;
}
.slider-section:hover .slider-section__carousel-btn, .slider-section:hover .slider-section__carousel-btn--left, .slider-section:hover .slider-section__carousel-btn--right {
  opacity: 1;
}

.carousel-icon, .carousel-icon--right, .carousel-icon--left {
  width: 1.8rem;
  height: 1.8rem;
}
.slide, .slide--3, .slide--2, .slide--1 {
  /* Subgrid definition for slide contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: #1fc2ef;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: multiply;
}
.slide--1 {
  background-image: url("/assets/images/background-images/slider-images/slider-1.jpg");
}
.slide--2 {
  display: none;
  background-image: url("/assets/images/background-images/slider-images/slider-2.jpg");
}
.slide--3 {
  display: none;
  background-image: url("/assets/images/background-images/slider-images/slider-3.jpg");
}
.slide__content {
  /* Placement in the slide subgrid layout. */
  grid-column: center-start/center-end;
  color: white;
}
.slide__para, .slide__para--lg, .slide__para--sm {
  width: max-content;
  line-height: 1;
}
.slide__para--sm {
  font-size: clamp(1rem, 5.8rem, 4.5vw);
  font-weight: 400;
}
.slide__para--lg {
  font-size: clamp(1rem, 10.2rem, 8vw);
  font-weight: 600;
}
.slide__para--lg:last-of-type::after {
  content: "";
  display: block;
  margin-top: 1rem;
  margin-left: 0.5rem;
  width: 17%;
  height: 0.5rem;
  background-color: currentColor;
}
.slide [class*=btn], .slide--1 [class*=btn], .slide--2 [class*=btn], .slide--3 [class*=btn] {
  margin-top: 5%;
}

.studies-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  background-color: #171122;
}
.studies-section__header {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  margin-bottom: 4rem;
  text-align: center;
}
.studies-section__header > .heading-2 {
  color: #032a5e;
}
.studies-section__header > .heading-6 {
  color: #1fc2ef;
}
.studies-section__header > .heading-2 {
  color: white;
}
.studies-section__project-cards {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  /* Another subgrid definition for project cards. */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(21rem, 1fr));
  gap: 3rem;
  margin-bottom: -4.5rem;
}
.studies-section__footer {
  /* Placement in the section subgrid layout. */
  grid-column: full-start/full-end;
  grid-row: 3;
  background-image: linear-gradient(to bottom, #f1f5f8, white);
  padding-top: 10rem;
  padding-bottom: 6rem;
  text-align: center;
}

.project {
  /* Establish a containing block for "project__back-img" to insert it as a background image in "project" container. */
  position: relative;
  min-height: 20rem;
  overflow: hidden;
  border-radius: 0.5rem;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
  text-align: center;
  transition: all 0.2s ease-in-out;
}
.project__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /* put it in a higher stacking order, to make the whole container clickable. */
  position: relative;
  z-index: 1;
  height: 100%;
  padding: 1rem 15%;
}
.project .heading-3 {
  color: white;
}
.project__brand-img {
  margin-top: 1rem;
}
.project__back-img {
  /* Absolutely position the image to be a background image for the "project" container. */
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.2;
  filter: grayscale(100%);
}
.project:nth-of-type(1) {
  background-color: #71cbcc;
}
.project:nth-of-type(2) {
  background-color: #3ea9f5;
}
.project:nth-of-type(3) {
  background-color: #8a49a1;
}
.project:hover {
  transform: translateY(-0.6rem);
}

.users-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Subgrid definition for section contents. It has the same columns as the global grid layout. */
  display: grid;
  grid-template-columns: [full-start] minmax(5vw, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 10rem) [col-end]) [center-end] minmax(5vw, 1fr) [full-end];
  background-image: linear-gradient(to top, #f1f5f8, white), url("/assets/images/background-images/bg-users-section.jpg");
  background-position: center bottom;
  background-size: contain;
  background-repeat: no-repeat;
  background-blend-mode: multiply;
}
.users-section__map {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
}
.users-section__contact-options {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  border-radius: 0.5rem;
  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
  margin-top: -8rem;
  background-color: rgba(255, 255, 255, 0.9);
  padding: 5% 0;
}
.users-section__contact-options::before {
  content: "";
  position: absolute;
  bottom: -0.8rem;
  transform: translateX(1%);
  width: 98%;
  height: 0.8rem;
  border-radius: 0 0 0.5rem 0.5rem;
  background-color: rgba(102, 124, 153, 0.2);
}
.users-section__contact-options::after {
  content: "";
  position: absolute;
  bottom: -1.6rem;
  transform: translateX(2%);
  width: 96%;
  height: 0.8rem;
  border-radius: 0 0 0.5rem 0.5rem;
  background-color: rgba(102, 124, 153, 0.4);
}
.users-section__footer {
  /* Placement in the section subgrid layout. */
  grid-column: center-start/center-end;
  padding: 6rem 0;
  text-align: center;
}

.map {
  position: relative;
  margin: auto;
  max-width: 92.5rem;
}
.map__user {
  position: absolute;
  cursor: pointer;
}

.user__img {
  /* Make "user__img" has a higher stacking order than the ::before pseudo element of "user". */
  position: relative;
  max-width: 3rem;
  max-height: 3rem;
}
.user::before, .user--10::before, .user--9::before, .user--8::before, .user--7::before, .user--6::before, .user--5::before, .user--4::before, .user--3::before, .user--2::before, .user--1::before {
  content: "";
  position: absolute;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: #032a5e;
  opacity: 0.2;
  animation: pin-on-map 3s infinite;
}
.user--1 {
  top: -2%;
  left: 34%;
}
.user--2 {
  top: 30%;
  left: 24%;
}
.user--3 {
  top: 30%;
  left: 47%;
}
.user--4 {
  top: 20%;
  left: 60%;
}
.user--5 {
  top: 10%;
  left: 10%;
}
.user--6 {
  top: 20%;
  left: 30%;
}
.user--7 {
  top: 42%;
  left: 70%;
}
.user--8 {
  top: 40%;
  left: 55%;
}
.user--9 {
  top: 60%;
  left: 30%;
}
.user--10 {
  left: 80%;
  top: 15%;
}

.contact-option {
  flex: 1 1 25rem;
  position: relative;
  padding: 0 5%;
}
.contact-option:first-of-type::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 0.1rem;
  height: 100%;
  background-color: #e6e6e6;
}
.contact-option__link-container {
  /* Another subgrid definition for the contact option container. */
  display: grid;
  grid-template-columns: auto auto;
  align-items: center;
  row-gap: 1rem;
  column-gap: 5%;
}
.contact-option .heading-3 {
  position: relative;
  white-space: nowrap;
  transition: all 0.2s ease-in-out;
  /* Placement in the contact option container. */
  grid-column: 1;
  grid-row: 1;
  color: #032a5e;
  margin: 0;
}
.contact-option .heading-3::after {
  content: "➜";
  position: absolute;
  top: 0.2rem;
  opacity: 0;
  transform: translateX(-0.5rem);
  font-size: 1.5rem;
  color: currentColor;
  transition: all 0.2s ease-in-out;
}
.contact-option .heading-3:hover {
  transform: translateX(-1rem);
}
.contact-option .heading-3:hover::after {
  opacity: 1;
  transform: translateX(1rem);
}
.contact-option .para {
  /* Placement in the contact option container. */
  grid-column: 1;
  grid-row: 2;
}
.contact-option__icon {
  /* Placement in the contact option container. */
  grid-column: 2;
  grid-row: 1/3;
  width: 6.4rem;
  height: 6.4rem;
}
.contact-option:hover .heading-3 {
  transform: translateX(-1rem);
}
.contact-option:hover .heading-3::after {
  opacity: 1;
  transform: translateX(1rem);
}
.contact-option:hover .contact-option__icon {
  animation: 1s infinite shake-icon;
}

.video-section {
  /* Placement in the global grid layout that is defined in _base.scss. */
  grid-column: full-start/full-end;
  /* Hide text overflow resulting from slide-show-text animation. */
  overflow: hidden;
  filter: grayscale(35%);
  background-image: linear-gradient(rgba(3, 42, 94, 0.7), rgba(3, 42, 94, 0.7)), url("/assets/images/background-images/bg-video-section.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  padding: 12rem 0;
}
.video-section__content {
  color: white;
  text-align: center;
}
.video-section__lead-text {
  font-size: 4.8rem;
}
.video-section__heading {
  position: relative;
  /* Must have a height value because all its child elements are absolutely positioned. */
  height: 9.6rem;
  width: 75%;
  margin-right: auto;
  margin-left: auto;
  line-height: 1;
}
.video-section__heading > * {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  width: 100%;
  text-align: center;
  animation: slide-show-text 12s infinite;
}
.video-section__heading > :nth-child(1) {
  animation-delay: 0s;
}
.video-section__heading > :nth-child(2) {
  animation-delay: 3s;
}
.video-section__heading > :nth-child(3) {
  animation-delay: 6s;
}
.video-section__heading > :nth-child(4) {
  animation-delay: 9s;
}
.video-section__para {
  font-size: 2.1rem;
}
.video-section__btn {
  margin-top: 5rem;
  border: none;
  border-radius: 50%;
  background-color: white;
  padding: 2rem;
  animation: pulse 3.5s infinite ease-in-out;
}
.video-section__icon {
  display: block;
  transform: translateX(10%);
  width: 1.5rem;
  height: 1.5rem;
  fill: #ff311f;
}

/*# sourceMappingURL=main.css.map */
